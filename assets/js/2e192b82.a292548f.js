"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4519],{3411:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7378),a=n(7140),o="tabItem_wHwb";function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},2453:function(e,t,n){n.d(t,{Z:function(){return m}});var r=n(2685),a=n(7378),o=n(7140),i=n(362),l=n(56),d=n(5720),s=n(9169),u="tabList_J5MA",c="tabItem_l0OV";function p(e){var t,n,i=e.lazy,p=e.block,m=e.defaultValue,f=e.values,h=e.groupId,g=e.className,k=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(b,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:k[0].props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,d.U)(),N=w.tabGroupChoices,x=w.setTabGroupChoices,C=(0,a.useState)(y),T=C[0],S=C[1],E=[],D=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var R=N[h];null!=R&&R!==T&&b.some((function(e){return e.value===R}))&&S(R)}var j=function(e){var t=e.currentTarget,n=E.indexOf(t),r=b[n].value;r!==T&&(D(t),S(r),null!=h&&x(h,String(r)))},M=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r,a=E.indexOf(e.currentTarget)+1;n=null!=(r=E[a])?r:E[0];break;case"ArrowLeft":var o,i=E.indexOf(e.currentTarget)-1;n=null!=(o=E[i])?o:E[E.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},g)},b.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return E.push(e)},onKeyDown:M,onFocus:j,onClick:j},i,{className:(0,o.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,a.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function m(e){var t=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},2851:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var r=n(2685),a=n(1244),o=(n(7378),n(5318)),i=n(3411),l=n(2453),d=["components"],s={id:"configureStore",title:"configureStore",sidebar_label:"configureStore",hide_title:!0},u=void 0,c={unversionedId:"api/configureStore",id:"api/configureStore",title:"configureStore",description:"&nbsp;",source:"@site/../docs/api/configureStore.mdx",sourceDirName:"api",slug:"/api/configureStore",permalink:"/api/configureStore",draft:!1,tags:[],version:"current",lastUpdatedAt:1716193556,formattedLastUpdatedAt:"May 20, 2024",frontMatter:{id:"configureStore",title:"configureStore",sidebar_label:"configureStore",hide_title:!0},sidebar:"docs",previous:{title:"Setup with Next.js",permalink:"/usage/nextjs"},next:{title:"getDefaultMiddleware",permalink:"/api/getDefaultMiddleware"}},p={},m=[{value:"Purpose and Behavior",id:"purpose-and-behavior",level:2},{value:"Parameters",id:"parameters",level:2},{value:"<code>reducer</code>",id:"reducer",level:3},{value:"<code>middleware</code>",id:"middleware",level:3},{value:"<code>devTools</code>",id:"devtools",level:3},{value:"<code>trace</code>",id:"trace",level:4},{value:"<code>preloadedState</code>",id:"preloadedstate",level:3},{value:"<code>enhancers</code>",id:"enhancers",level:3},{value:"Usage",id:"usage",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Full Example",id:"full-example",level:3}],f={toc:m};function h(e){var t=e.components,n=(0,a.Z)(e,d);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configurestore"},(0,o.kt)("inlineCode",{parentName:"h1"},"configureStore")),(0,o.kt)("p",null,"The standard method for creating a Redux store. It uses the low-level Redux core ",(0,o.kt)("inlineCode",{parentName:"p"},"createStore")," method internally, but wraps that to provide good defaults to the store setup for a better development experience."),(0,o.kt)("h2",{id:"purpose-and-behavior"},"Purpose and Behavior"),(0,o.kt)("p",null,"A standard Redux store setup typically requires multiple pieces of configuration:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Combining the slice reducers into the root reducer"),(0,o.kt)("li",{parentName:"ul"},"Creating the middleware enhancer, usually with the thunk middleware or other side effects middleware, as well as middleware that might be used for development checks"),(0,o.kt)("li",{parentName:"ul"},"Adding the Redux DevTools enhancer, and composing the enhancers together"),(0,o.kt)("li",{parentName:"ul"},"Calling ",(0,o.kt)("inlineCode",{parentName:"li"},"createStore"))),(0,o.kt)("p",null,"Legacy Redux usage patterns typically required several dozen lines of copy-pasted boilerplate to achieve this."),(0,o.kt)("p",null,"Redux Toolkit's ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," simplifies that setup process, by doing all that work for you. One call to ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Call ",(0,o.kt)("inlineCode",{parentName:"li"},"combineReducers")," to combine your slices reducers into the root reducer function"),(0,o.kt)("li",{parentName:"ul"},"Add the thunk middleware and called ",(0,o.kt)("inlineCode",{parentName:"li"},"applyMiddleware")),(0,o.kt)("li",{parentName:"ul"},"In development, automatically add more middleware to check for common mistakes like accidentally mutating the state"),(0,o.kt)("li",{parentName:"ul"},"Automatically set up the Redux DevTools Extension connection"),(0,o.kt)("li",{parentName:"ul"},"Call ",(0,o.kt)("inlineCode",{parentName:"li"},"createStore")," to create a Redux store using that root reducer and those configuration options")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," also offers an improved API and usage patterns compared to the original ",(0,o.kt)("inlineCode",{parentName:"p"},"createStore")," by accepting named fields for ",(0,o.kt)("inlineCode",{parentName:"p"},"reducer"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"preloadedState"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"middleware"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"enhancers"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"devtools"),", as well as much better TS type inference."),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," accepts a single configuration object parameter, with the following options:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"\ninterface ConfigureStoreOptions<\n  S = any,\n  A extends Action = UnknownAction,\n  M extends Tuple<Middlewares<S>> = Tuple<Middlewares<S>>\n  E extends Tuple<Enhancers> = Tuple<Enhancers>,\n  P = S\n> {\n  /**\n   * A single reducer function that will be used as the root reducer, or an\n   * object of slice reducers that will be passed to `combineReducers()`.\n   */\n  reducer: Reducer<S, A, P> | ReducersMapObject<S, A, P>\n\n  /**\n   * An array of Redux middleware to install. If not supplied, defaults to\n   * the set of middleware returned by `getDefaultMiddleware()`.\n   */\n  middleware?: ((getDefaultMiddleware: CurriedGetDefaultMiddleware<S>) => M) | M\n\n  /**\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\n   *\n   * Additional configuration can be done by passing Redux DevTools options\n   */\n  devTools?: boolean | DevToolsOptions\n\n  /**\n   * The initial state, same as Redux's createStore.\n   * You may optionally specify it to hydrate the state\n   * from the server in universal apps, or to restore a previously serialized\n   * user session. If you use `combineReducers()` to produce the root reducer\n   * function (either directly or indirectly by passing an object as `reducer`),\n   * this must be an object with the same shape as the reducer map keys.\n   */\n  preloadedState?: P\n\n  /**\n   * The store enhancers to apply. See Redux's `createStore()`.\n   * All enhancers will be included before the DevTools Extension enhancer.\n   * If you need to customize the order of enhancers, supply a callback\n   * function that will receive the getDefaultEnhancers,\n   * and should return a new array (such as `getDefaultEnhancers().concat(offline)`).\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\n   */\n  enhancers?: (getDefaultEnhancers: GetDefaultEnhancers<M>) => E | E\n}\n\nfunction configureStore<\n  S = any,\n  A extends Action = UnknownAction,\n  M extends Tuple<Middlewares<S>> = Tuple<Middlewares<S>>\n  E extends Tuple<Enhancers> = Tuple<Enhancers>,\n  P = S\n>(options: ConfigureStoreOptions<S, A, M, E, P>): EnhancedStore<S, A, M, E>\n")),(0,o.kt)("h3",{id:"reducer"},(0,o.kt)("inlineCode",{parentName:"h3"},"reducer")),(0,o.kt)("p",null,"If this is a single function, it will be directly used as the root reducer for the store."),(0,o.kt)("p",null,"If it is an object of slice reducers, like ",(0,o.kt)("inlineCode",{parentName:"p"},"{users : usersReducer, posts : postsReducer}"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will automatically create the root reducer by passing this object to the\n",(0,o.kt)("a",{parentName:"p",href:"https://redux.js.org/api/combinereducers"},"Redux ",(0,o.kt)("inlineCode",{parentName:"a"},"combineReducers")," utility"),"."),(0,o.kt)("h3",{id:"middleware"},(0,o.kt)("inlineCode",{parentName:"h3"},"middleware")),(0,o.kt)("p",null,"A callback which will receive ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultMiddleware")," as its argument,\nand should return a middleware array."),(0,o.kt)("p",null,"If this option is provided, it should return all the middleware functions you\nwant added to the store. ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will automatically pass those to ",(0,o.kt)("inlineCode",{parentName:"p"},"applyMiddleware"),"."),(0,o.kt)("p",null,"If not provided, ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will call ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultMiddleware")," and use the\narray of middleware functions it returns."),(0,o.kt)("p",null,"For more details on how the ",(0,o.kt)("inlineCode",{parentName:"p"},"middleware")," parameter works and the list of middleware that are added by default, see the\n",(0,o.kt)("a",{parentName:"p",href:"/api/getDefaultMiddleware"},(0,o.kt)("inlineCode",{parentName:"a"},"getDefaultMiddleware")," docs page"),"."),(0,o.kt)("admonition",{title:"Tuple",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Typescript users are required to use a ",(0,o.kt)("inlineCode",{parentName:"p"},"Tuple")," instance (if not using a ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultMiddleware")," result, which is already a ",(0,o.kt)("inlineCode",{parentName:"p"},"Tuple"),"), for better inference."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"import { configureStore, Tuple } from '@reduxjs/toolkit'\n\nconfigureStore({\n  reducer: rootReducer,\n  middleware: () => new Tuple(additionalMiddleware, logger),\n})\n")),(0,o.kt)("p",{parentName:"admonition"},"Javascript-only users are free to use a plain array if preferred.")),(0,o.kt)("h3",{id:"devtools"},(0,o.kt)("inlineCode",{parentName:"h3"},"devTools")),(0,o.kt)("p",null,"If this is a boolean, it will be used to indicate whether ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," should automatically enable support for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-devtools"},"the Redux DevTools browser extension"),"."),(0,o.kt)("p",null,"If it is an object, then the DevTools Extension will be enabled, and the options object will be passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"composeWithDevtools()"),". See\nthe DevTools Extension docs for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-devtools/blob/main/extension/docs/API/Arguments.md"},(0,o.kt)("inlineCode",{parentName:"a"},"EnhancerOptions"))," for\na list of the specific options that are available."),(0,o.kt)("p",null,"Defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h4",{id:"trace"},(0,o.kt)("inlineCode",{parentName:"h4"},"trace")),(0,o.kt)("p",null,"The Redux DevTools Extension recently added ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-devtools/blob/main/extension/docs/Features/Trace.md"},"support for showing action stack traces")," that show exactly where each action was dispatched.\nCapturing the traces can add a bit of overhead, so the DevTools Extension allows users to configure whether action stack traces are captured by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-devtools/blob/main/extension/docs/API/Arguments.md#trace"},"setting the 'trace' argument"),".\nIf the DevTools are enabled by passing ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," or an object, then ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will default to enabling capturing action stack traces in development mode only."),(0,o.kt)("h3",{id:"preloadedstate"},(0,o.kt)("inlineCode",{parentName:"h3"},"preloadedState")),(0,o.kt)("p",null,"An optional initial state value to be passed to the Redux ",(0,o.kt)("inlineCode",{parentName:"p"},"createStore")," function."),(0,o.kt)("h3",{id:"enhancers"},(0,o.kt)("inlineCode",{parentName:"h3"},"enhancers")),(0,o.kt)("p",null,"A callback function to customize the array of enhancers."),(0,o.kt)("p",null,"Enhancers returned by this callback will be passed to ",(0,o.kt)("a",{parentName:"p",href:"https://redux.js.org/api/compose"},"the Redux ",(0,o.kt)("inlineCode",{parentName:"a"},"compose")," function"),", and the combined enhancer will be passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"createStore"),"."),(0,o.kt)("admonition",{title:"Dev Tools",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This should ",(0,o.kt)("em",{parentName:"p"},"not")," include the Redux DevTools Extension ",(0,o.kt)("inlineCode",{parentName:"p"},"composeWithDevTools"),", as this is already handled by ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore"),"."),(0,o.kt)("p",{parentName:"admonition"},"Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"enhancers: () => new Tuple(offline)")," will result in a final setup of ",(0,o.kt)("inlineCode",{parentName:"p"},"[offline, devToolsExtension]"),".")),(0,o.kt)("p",null,"If not provided, ",(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will call ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultEnhancers")," and use the array of enhancers it returns (including ",(0,o.kt)("inlineCode",{parentName:"p"},"applyMiddleware")," with specified middleware)."),(0,o.kt)("p",null,"Where you wish to add onto or customize the default enhancers, you may pass a callback function that will receive ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultEnhancers")," as its argument, and should return an enhancer array."),(0,o.kt)("p",null,"Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"enhancers: (defaultEnhancers) => defaultEnhancers.prepend(offline)")," will result in a final setup\nof ",(0,o.kt)("inlineCode",{parentName:"p"},"[offline, applyMiddleware, devToolsExtension]"),"."),(0,o.kt)("p",null,"For more details on how the ",(0,o.kt)("inlineCode",{parentName:"p"},"enhancer")," parameter works and the list of enhancers that are added by default, see the ",(0,o.kt)("a",{parentName:"p",href:"./getDefaultEnhancers"},(0,o.kt)("inlineCode",{parentName:"a"},"getDefaultEnhancers")," docs page"),"."),(0,o.kt)("admonition",{title:"Middleware",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If you don't use ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultEnhancers")," and instead return an array, the ",(0,o.kt)("inlineCode",{parentName:"p"},"applyMiddleware")," enhancer will ",(0,o.kt)("em",{parentName:"p"},"not")," be used."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"configureStore")," will warn in console if any middleware are provided (or left as default) but not included in the final list of enhancers."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"// warns - middleware customised but not included in final enhancers\nconfigureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\n  enhancers: [offline(offlineConfig)],\n})\n\n// fine - default enhancers included\nconfigureStore({\n  reducer,\n  enhancers: (getDefaultEnhancers) => getDefaultEnhancers().concat(offline(offlineConfig)),\n})\n\n// also allowed\nconfigureStore({\n  reducer,\n  middleware: () => [],\n  enhancers: () => [offline(offlineConfig)],\n})\n")),(0,o.kt)("p",{parentName:"admonition"},"Note that if using Typescript, the ",(0,o.kt)("inlineCode",{parentName:"p"},"middleware")," option is required to be provided ",(0,o.kt)("em",{parentName:"p"},"before")," the enhancer option, as the type of ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultEnhancers")," depends on its result.")),(0,o.kt)("admonition",{title:"Tuple",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Typescript users are required to use a ",(0,o.kt)("inlineCode",{parentName:"p"},"Tuple")," instance (if not using a ",(0,o.kt)("inlineCode",{parentName:"p"},"getDefaultEnhancer")," result, which is already a ",(0,o.kt)("inlineCode",{parentName:"p"},"Tuple"),"), for better inference."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"import { configureStore, Tuple } from '@reduxjs/toolkit'\n\nconfigureStore({\n  reducer: rootReducer,\n  enhancers: () => new Tuple(offline),\n})\n")),(0,o.kt)("p",{parentName:"admonition"},"Javascript-only users are free to use a plain array if preferred.")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"basic-example"},"Basic Example"),(0,o.kt)(l.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { configureStore } from '@reduxjs/toolkit'\n\nimport rootReducer from './reducers'\n\nconst store = configureStore({ reducer: rootReducer })\n// The store now has redux-thunk added and the Redux DevTools Extension is turned on\n"))),(0,o.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { configureStore } from '@reduxjs/toolkit'\n\nimport rootReducer from './reducers'\n\nconst store = configureStore({ reducer: rootReducer })\n// The store now has redux-thunk added and the Redux DevTools Extension is turned on\n")))),(0,o.kt)("h3",{id:"full-example"},"Full Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"// file: todos/todosReducer.ts noEmit\nimport type { Reducer } from '@reduxjs/toolkit'\ndeclare const reducer: Reducer<{}>\nexport default reducer\n\n// file: visibility/visibilityReducer.ts noEmit\nimport type { Reducer } from '@reduxjs/toolkit'\ndeclare const reducer: Reducer<{}>\nexport default reducer\n\n// file: store.ts\nimport { configureStore } from '@reduxjs/toolkit'\n\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n\n// And use redux-batched-subscribe as an example of adding enhancers\nimport { batchedSubscribe } from 'redux-batched-subscribe'\n\nimport todosReducer from './todos/todosReducer'\nimport visibilityReducer from './visibility/visibilityReducer'\n\nconst reducer = {\n  todos: todosReducer,\n  visibility: visibilityReducer,\n}\n\nconst preloadedState = {\n  todos: [\n    {\n      text: 'Eat food',\n      completed: true,\n    },\n    {\n      text: 'Exercise',\n      completed: false,\n    },\n  ],\n  visibilityFilter: 'SHOW_COMPLETED',\n}\n\nconst debounceNotify = _.debounce((notify) => notify())\n\nconst store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState,\n  enhancers: (getDefaultEnhancers) =>\n    getDefaultEnhancers({\n      autoBatch: false,\n    }).concat(batchedSubscribe(debounceNotify)),\n})\n\n// The store has been created with these options:\n// - The slice reducers were automatically passed to combineReducers()\n// - redux-thunk and redux-logger were added as middleware\n// - The Redux DevTools Extension is disabled for production\n// - The middleware, batched subscribe, and devtools enhancers were composed together\n")))}h.isMDXComponent=!0},5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(d,".").concat(m)]||p[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);