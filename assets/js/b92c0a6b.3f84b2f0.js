"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3479],{3411:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(7378),r=a(7140),i="tabItem_wHwb";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:a},t)}},2453:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(2685),r=a(7378),i=a(7140),l=a(362),u=a(56),s=a(5720),o=a(9169),d="tabList_J5MA",c="tabItem_l0OV";function p(e){var t,a,l=e.lazy,p=e.block,m=e.defaultValue,f=e.values,k=e.groupId,h=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=f?f:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,u.l)(N,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===m?m:null!=(t=null!=m?m:null==(a=y.find((function(e){return e.props.default})))?void 0:a.props.value)?t:y[0].props.value;if(null!==v&&!N.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+N.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,s.U)(),C=g.tabGroupChoices,S=g.setTabGroupChoices,x=(0,r.useState)(v),w=x[0],q=x[1],T=[],O=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var I=C[k];null!=I&&I!==w&&N.some((function(e){return e.value===I}))&&q(I)}var j=function(e){var t=e.currentTarget,a=T.indexOf(t),n=N[a].value;n!==w&&(O(t),q(n),null!=k&&S(k,String(n)))},E=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,r=T.indexOf(e.currentTarget)+1;a=null!=(n=T[r])?n:T[0];break;case"ArrowLeft":var i,l=T.indexOf(e.currentTarget)-1;a=null!=(i=T[l])?i:T[T.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":p},h)},N.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return T.push(e)},onKeyDown:E,onFocus:j,onClick:j},l,{className:(0,i.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(y.filter((function(e){return e.props.value===w}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function m(e){var t=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},9448:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return u},metadata:function(){return o},toc:function(){return c}});var n=a(2685),r=a(1244),i=(a(7378),a(5318)),l=(a(3411),a(2453),["components"]),u={},s="BuildSlice",o={unversionedId:"rtk-query/internal/buildSlice",id:"rtk-query/internal/buildSlice",title:"BuildSlice",description:"Slices",source:"@site/../docs/rtk-query/internal/buildSlice.mdx",sourceDirName:"rtk-query/internal",slug:"/rtk-query/internal/buildSlice",permalink:"/rtk-query/internal/buildSlice",draft:!1,tags:[],version:"current",lastUpdatedAt:1716193556,formattedLastUpdatedAt:"May 20, 2024",frontMatter:{}},d={},c=[{value:"Slices",id:"slices",level:2},{value:"querySlice",id:"queryslice",level:3},{value:"reducers",id:"reducers",level:4},{value:"extraReducers - matching queryThunk cases",id:"extrareducers---matching-querythunk-cases",level:4},{value:"mutationSlice",id:"mutationslice",level:3},{value:"reducers",id:"reducers-1",level:4},{value:"extraReducers - matching mutationThunk cases",id:"extrareducers---matching-mutationthunk-cases",level:4},{value:"invalidationSlice",id:"invalidationslice",level:3},{value:"reducers",id:"reducers-2",level:4},{value:"extraReducers",id:"extrareducers",level:4},{value:"subscriptionSlice / internalSubscriptionSlice",id:"subscriptionslice--internalsubscriptionslice",level:3},{value:"reducers",id:"reducers-3",level:4},{value:"configSlice",id:"configslice",level:3},{value:"reducers",id:"reducers-4",level:4},{value:"extraReducers",id:"extrareducers-1",level:4},{value:"Functions",id:"functions",level:2},{value:"<code>updateQuerySubstateIfExists</code>",id:"updatequerysubstateifexists",level:3},{value:"<code>getMutationCacheKey</code>",id:"getmutationcachekey",level:3},{value:"<code>getMutationSubstateIfExists</code>",id:"getmutationsubstateifexists",level:3}],p={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"buildslice"},"BuildSlice"),(0,i.kt)("h2",{id:"slices"},"Slices"),(0,i.kt)("h3",{id:"queryslice"},"querySlice"),(0,i.kt)("h4",{id:"reducers"},"reducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"removeQueryResult")," - delete a specific cacheKey's stored result"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"queryResultPatched")," - patch a specific cacheKey's result")),(0,i.kt)("h4",{id:"extrareducers---matching-querythunk-cases"},"extraReducers - matching queryThunk cases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"queryThunk.pending"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Initially sets QueryStatus to uninitialized"),(0,i.kt)("li",{parentName:"ul"},"updates QueryStatus to pending"),(0,i.kt)("li",{parentName:"ul"},"Generates requestId"),(0,i.kt)("li",{parentName:"ul"},"stores originalArgs"),(0,i.kt)("li",{parentName:"ul"},"stores startedTimeStamp"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"queryThunk.fulfilled"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"handles merge functionality first"),(0,i.kt)("li",{parentName:"ul"},"otherwise updates the cache data, creates a fulfilledTimeStamp and deletes the substates error")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"if (merge) {\n  if (substate.data !== undefined) {\n    const { fulfilledTimeStamp, arg, baseQueryMeta, requestId } = meta\n    // There's existing cache data. Let the user merge it in themselves.\n    // We're already inside an Immer-powered reducer, and the user could just mutate `substate.data`\n    // themselves inside of `merge()`. But, they might also want to return a new value.\n    // Try to let Immer figure that part out, save the result, and assign it to `substate.data`.\n    let newData = createNextState(substate.data, (draftSubstateData) => {\n      // As usual with Immer, you can mutate _or_ return inside here, but not both\n      return merge(draftSubstateData, payload, {\n        arg: arg.originalArgs,\n        baseQueryMeta,\n        fulfilledTimeStamp,\n        requestId,\n      })\n    })\n    substate.data = newData\n  } else {\n    // Presumably a fresh request. Just cache the response data.\n    substate.data = payload\n  }\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"queryThunk.rejected"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"utilises ",(0,i.kt)("inlineCode",{parentName:"li"},"condition()")," from ",(0,i.kt)("inlineCode",{parentName:"li"},"queryThunk")," and does nothing if the rejection is a result of ",(0,i.kt)("inlineCode",{parentName:"li"},"condition()")," (indicates a thunk is already running here)"),(0,i.kt)("li",{parentName:"ul"},"else substate.error is set and the status is changed to rejected"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasRehydrationInfo"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"iterates through and resets entries for all fulfilled or rejected status")))),(0,i.kt)("h3",{id:"mutationslice"},"mutationSlice"),(0,i.kt)("h4",{id:"reducers-1"},"reducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"removeMutationResult"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"calls ",(0,i.kt)("inlineCode",{parentName:"li"},"getMutationCacheKey")," from payload"),(0,i.kt)("li",{parentName:"ul"},"if cacheKey is in draft it deletes ",(0,i.kt)("inlineCode",{parentName:"li"},"draft[cacheKey"),"(?)")))),(0,i.kt)("h4",{id:"extrareducers---matching-mutationthunk-cases"},"extraReducers - matching mutationThunk cases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mutationThunk.pending"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"exits if track is set to false"),(0,i.kt)("li",{parentName:"ul"},"otherwise updates appropriate cacheKey with requestId, pending status and startedTimeStamp"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mutationThunk.fulfilled"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"exits if track is set to false"),(0,i.kt)("li",{parentName:"ul"},"otherwise sets data off payload and fulfilledTimeStamp"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mutationThunk.rejected"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"exits if track is set to false"),(0,i.kt)("li",{parentName:"ul"},"otherwise sets error and status to rejected"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasRehydrationInfo"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"iterates through and resets entries for all fulfilled or rejected status")))),(0,i.kt)("h3",{id:"invalidationslice"},"invalidationSlice"),(0,i.kt)("h4",{id:"reducers-2"},"reducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"updateProvidedBy",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"takes queryCacheKey and providedTags from payload"),(0,i.kt)("li",{parentName:"ul"},"appends to a list of idSubscriptions the queryCacheKey that are currently subscribed to for each tag")))),(0,i.kt)("h4",{id:"extrareducers"},"extraReducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"querySlice.actions.removeQueryResult"),",",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"deletes relevant queryCacheKey entry from list of subscription ids"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasRehydrationInfo"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"TODO"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"queryThunk.fulfilled")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"queryThunk.rejected"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"gets list of tags from action and endpoint definition"),(0,i.kt)("li",{parentName:"ul"},"gets queryCacheKey"),(0,i.kt)("li",{parentName:"ul"},"calls updateProvidedBy action")))),(0,i.kt)("h3",{id:"subscriptionslice--internalsubscriptionslice"},"subscriptionSlice / internalSubscriptionSlice"),(0,i.kt)("h4",{id:"reducers-3"},"reducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"updateSubscriptionOptions"),(0,i.kt)("li",{parentName:"ul"},"unsubscribeQueryResult"),(0,i.kt)("li",{parentName:"ul"},"internal_getRTKQSubscriptions"),(0,i.kt)("li",{parentName:"ul"},"subscriptionsUpdated",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"applyPatches() to the state from the payload")))),(0,i.kt)("h3",{id:"configslice"},"configSlice"),(0,i.kt)("h4",{id:"reducers-4"},"reducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"middlewareRegistered",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"toggles whether the middleware is registered or if there is a conflict")))),(0,i.kt)("h4",{id:"extrareducers-1"},"extraReducers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onOnline"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"manages state.online in response to listenerMiddleware"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onOffline"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"manages state.online in response to listenerMiddleware"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onFocus"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"manages state.focused in response to listenerMiddleware"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onFocusLost"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"manages state.focused in response to listenerMiddleware"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasRehydrationInfo"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'lists a comment that says: "update the state to be a new object to be picked up as a "state change" by redux-persist\'s ',(0,i.kt)("inlineCode",{parentName:"li"},"autoMergeLevel2"),'"')))),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"updatequerysubstateifexists"},(0,i.kt)("inlineCode",{parentName:"h3"},"updateQuerySubstateIfExists")),(0,i.kt)("p",null,'Utility function that takes the api/endpoint state, queryCacheKey and Update function.\nThe "SubState" is determined by accessing the ',(0,i.kt)("inlineCode",{parentName:"p"},"queryCacheKey")," value inside the state. If the substate exists, the update function is executed on the substate."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"no-transpile","no-transpile":!0},"function updateQuerySubstateIfExists(state, queryCacheKey, update) {\n  const substate = state[queryCacheKey]\n  if (substate) {\n    update(substate)\n  }\n}\n")),(0,i.kt)("h3",{id:"getmutationcachekey"},(0,i.kt)("inlineCode",{parentName:"h3"},"getMutationCacheKey")),(0,i.kt)("p",null,"conditionally determines the cachekey to be used for the mutation, prioritising the argument provided, followed by the provided cacheKey, and the generated requestId otherwise"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"export function getMutationCacheKey(\n  id:\n    | { fixedCacheKey?: string; requestId?: string }\n    | MutationSubstateIdentifier\n    | { requestId: string; arg: { fixedCacheKey?: string | undefined } },\n): string | undefined {\n  return ('arg' in id ? id.arg.fixedCacheKey : id.fixedCacheKey) ?? id.requestId\n}\n")),(0,i.kt)("h3",{id:"getmutationsubstateifexists"},(0,i.kt)("inlineCode",{parentName:"h3"},"getMutationSubstateIfExists")),(0,i.kt)("p",null,"same as query version except it uses the id instead of the queryCacheKey, and uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"getMutationCacheKey")," to determine the cachekey"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"no-transpile","no-transpile":!0},"function updateMutationSubstateIfExists(state, id, update) {\n  const substate = state[getMutationCacheKey(id)]\n  if (substate) {\n    update(substate)\n  }\n}\n")))}m.isMDXComponent=!0},5318:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=o(a),m=r,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||i;return a?n.createElement(f,l(l({ref:t},d),{},{components:a})):n.createElement(f,l({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=p;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:r,l[1]=u;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);