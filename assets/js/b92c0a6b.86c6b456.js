"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["822"],{1039:function(e,n,t){t.r(n),t.d(n,{default:()=>o,frontMatter:()=>l,metadata:()=>s,assets:()=>c,toc:()=>d,contentTitle:()=>a});var s=JSON.parse('{"id":"rtk-query/internal/buildSlice","title":"BuildSlice","description":"Slices","source":"@site/../docs/rtk-query/internal/buildSlice.mdx","sourceDirName":"rtk-query/internal","slug":"/rtk-query/internal/buildSlice","permalink":"/rtk-query/internal/buildSlice","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1754248441000,"frontMatter":{}}'),i=t("4246"),r=t("980");t("8049"),t("5181");let l={},a="BuildSlice",c={},d=[{value:"Slices",id:"slices",level:2},{value:"querySlice",id:"queryslice",level:3},{value:"reducers",id:"reducers",level:4},{value:"extraReducers - matching queryThunk cases",id:"extrareducers---matching-querythunk-cases",level:4},{value:"mutationSlice",id:"mutationslice",level:3},{value:"reducers",id:"reducers-1",level:4},{value:"extraReducers - matching mutationThunk cases",id:"extrareducers---matching-mutationthunk-cases",level:4},{value:"invalidationSlice",id:"invalidationslice",level:3},{value:"reducers",id:"reducers-2",level:4},{value:"extraReducers",id:"extrareducers",level:4},{value:"subscriptionSlice / internalSubscriptionSlice",id:"subscriptionslice--internalsubscriptionslice",level:3},{value:"reducers",id:"reducers-3",level:4},{value:"configSlice",id:"configslice",level:3},{value:"reducers",id:"reducers-4",level:4},{value:"extraReducers",id:"extrareducers-1",level:4},{value:"Functions",id:"functions",level:2},{value:"<code>updateQuerySubstateIfExists</code>",id:"updatequerysubstateifexists",level:3},{value:"<code>getMutationCacheKey</code>",id:"getmutationcachekey",level:3},{value:"<code>getMutationSubstateIfExists</code>",id:"getmutationsubstateifexists",level:3}];function u(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"buildslice",children:"BuildSlice"})}),"\n",(0,i.jsx)(n.h2,{id:"slices",children:"Slices"}),"\n",(0,i.jsx)(n.h3,{id:"queryslice",children:"querySlice"}),"\n",(0,i.jsx)(n.h4,{id:"reducers",children:"reducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"removeQueryResult"})," - delete a specific cacheKey's stored result"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queryResultPatched"})," - patch a specific cacheKey's result"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"extrareducers---matching-querythunk-cases",children:"extraReducers - matching queryThunk cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queryThunk.pending"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initially sets QueryStatus to uninitialized"}),"\n",(0,i.jsx)(n.li,{children:"updates QueryStatus to pending"}),"\n",(0,i.jsx)(n.li,{children:"Generates requestId"}),"\n",(0,i.jsx)(n.li,{children:"stores originalArgs"}),"\n",(0,i.jsx)(n.li,{children:"stores startedTimeStamp"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queryThunk.fulfilled"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"handles merge functionality first"}),"\n",(0,i.jsx)(n.li,{children:"otherwise updates the cache data, creates a fulfilledTimeStamp and deletes the substates error"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"no-transpile",children:"if (merge) {\n  if (substate.data !== undefined) {\n    const { fulfilledTimeStamp, arg, baseQueryMeta, requestId } = meta\n    // There's existing cache data. Let the user merge it in themselves.\n    // We're already inside an Immer-powered reducer, and the user could just mutate `substate.data`\n    // themselves inside of `merge()`. But, they might also want to return a new value.\n    // Try to let Immer figure that part out, save the result, and assign it to `substate.data`.\n    let newData = createNextState(substate.data, (draftSubstateData) => {\n      // As usual with Immer, you can mutate _or_ return inside here, but not both\n      return merge(draftSubstateData, payload, {\n        arg: arg.originalArgs,\n        baseQueryMeta,\n        fulfilledTimeStamp,\n        requestId,\n      })\n    })\n    substate.data = newData\n  } else {\n    // Presumably a fresh request. Just cache the response data.\n    substate.data = payload\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queryThunk.rejected"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["utilises ",(0,i.jsx)(n.code,{children:"condition()"})," from ",(0,i.jsx)(n.code,{children:"queryThunk"})," and does nothing if the rejection is a result of ",(0,i.jsx)(n.code,{children:"condition()"})," (indicates a thunk is already running here)"]}),"\n",(0,i.jsx)(n.li,{children:"else substate.error is set and the status is changed to rejected"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hasRehydrationInfo"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"iterates through and resets entries for all fulfilled or rejected status"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"mutationslice",children:"mutationSlice"}),"\n",(0,i.jsx)(n.h4,{id:"reducers-1",children:"reducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"removeMutationResult"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["calls ",(0,i.jsx)(n.code,{children:"getMutationCacheKey"})," from payload"]}),"\n",(0,i.jsxs)(n.li,{children:["if cacheKey is in draft it deletes ",(0,i.jsx)(n.code,{children:"draft[cacheKey"}),"(?)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"extrareducers---matching-mutationthunk-cases",children:"extraReducers - matching mutationThunk cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mutationThunk.pending"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"exits if track is set to false"}),"\n",(0,i.jsx)(n.li,{children:"otherwise updates appropriate cacheKey with requestId, pending status and startedTimeStamp"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mutationThunk.fulfilled"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"exits if track is set to false"}),"\n",(0,i.jsx)(n.li,{children:"otherwise sets data off payload and fulfilledTimeStamp"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mutationThunk.rejected"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"exits if track is set to false"}),"\n",(0,i.jsx)(n.li,{children:"otherwise sets error and status to rejected"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hasRehydrationInfo"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"iterates through and resets entries for all fulfilled or rejected status"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"invalidationslice",children:"invalidationSlice"}),"\n",(0,i.jsx)(n.h4,{id:"reducers-2",children:"reducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["updateProvidedBy","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"takes queryCacheKey and providedTags from payload"}),"\n",(0,i.jsx)(n.li,{children:"appends to a list of idSubscriptions the queryCacheKey that are currently subscribed to for each tag"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"extrareducers",children:"extraReducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"querySlice.actions.removeQueryResult"}),",","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"deletes relevant queryCacheKey entry from list of subscription ids"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hasRehydrationInfo"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"TODO"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queryThunk.fulfilled"})," or ",(0,i.jsx)(n.code,{children:"queryThunk.rejected"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"gets list of tags from action and endpoint definition"}),"\n",(0,i.jsx)(n.li,{children:"gets queryCacheKey"}),"\n",(0,i.jsx)(n.li,{children:"calls updateProvidedBy action"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"subscriptionslice--internalsubscriptionslice",children:"subscriptionSlice / internalSubscriptionSlice"}),"\n",(0,i.jsx)(n.h4,{id:"reducers-3",children:"reducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"updateSubscriptionOptions"}),"\n",(0,i.jsx)(n.li,{children:"unsubscribeQueryResult"}),"\n",(0,i.jsx)(n.li,{children:"internal_getRTKQSubscriptions"}),"\n",(0,i.jsxs)(n.li,{children:["subscriptionsUpdated","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"applyPatches() to the state from the payload"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configslice",children:"configSlice"}),"\n",(0,i.jsx)(n.h4,{id:"reducers-4",children:"reducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["middlewareRegistered","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"toggles whether the middleware is registered or if there is a conflict"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"extrareducers-1",children:"extraReducers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onOnline"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"manages state.online in response to listenerMiddleware"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onOffline"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"manages state.online in response to listenerMiddleware"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onFocus"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"manages state.focused in response to listenerMiddleware"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onFocusLost"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"manages state.focused in response to listenerMiddleware"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hasRehydrationInfo"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['lists a comment that says: "update the state to be a new object to be picked up as a "state change" by redux-persist\'s ',(0,i.jsx)(n.code,{children:"autoMergeLevel2"}),'"']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(n.h3,{id:"updatequerysubstateifexists",children:(0,i.jsx)(n.code,{children:"updateQuerySubstateIfExists"})}),"\n",(0,i.jsxs)(n.p,{children:['Utility function that takes the api/endpoint state, queryCacheKey and Update function.\nThe "SubState" is determined by accessing the ',(0,i.jsx)(n.code,{children:"queryCacheKey"})," value inside the state. If the substate exists, the update function is executed on the substate."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:"no-transpile",children:"function updateQuerySubstateIfExists(state, queryCacheKey, update) {\n  const substate = state[queryCacheKey]\n  if (substate) {\n    update(substate)\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"getmutationcachekey",children:(0,i.jsx)(n.code,{children:"getMutationCacheKey"})}),"\n",(0,i.jsx)(n.p,{children:"conditionally determines the cachekey to be used for the mutation, prioritising the argument provided, followed by the provided cacheKey, and the generated requestId otherwise"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"no-transpile",children:"export function getMutationCacheKey(\n  id:\n    | { fixedCacheKey?: string; requestId?: string }\n    | MutationSubstateIdentifier\n    | { requestId: string; arg: { fixedCacheKey?: string | undefined } },\n): string | undefined {\n  return ('arg' in id ? id.arg.fixedCacheKey : id.fixedCacheKey) ?? id.requestId\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"getmutationsubstateifexists",children:(0,i.jsx)(n.code,{children:"getMutationSubstateIfExists"})}),"\n",(0,i.jsxs)(n.p,{children:["same as query version except it uses the id instead of the queryCacheKey, and uses the ",(0,i.jsx)(n.code,{children:"getMutationCacheKey"})," to determine the cachekey"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:"no-transpile",children:"function updateMutationSubstateIfExists(state, id, update) {\n  const substate = state[getMutationCacheKey(id)]\n  if (substate) {\n    update(substate)\n  }\n}\n"})})]})}function o(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8049:function(e,n,t){t.d(n,{Z:()=>r});var s=t("4246");t("7378");var i=t("4870");function r(e){let{children:n,hidden:t,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_wHwb",r),hidden:t,children:n})}},5181:function(e,n,t){t.d(n,{Z:()=>y});var s=t("4246"),i=t("7378"),r=t("4870"),l=t("5403"),a=t("3620"),c=t("7090"),d=t("6180"),u=t("3418"),o=t("9073");function h(e){var n,t;return null!==(t=null===(n=i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error("Docusaurus error: Bad <Tabs> child <".concat("string"==typeof e.type?e.type:e.type.name,'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.'))}))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function x(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var j=t("3344");function f(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:c}=e,d=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),o=e=>{let n=e.currentTarget,t=c[d.indexOf(n)].value;t!==i&&(u(n),a(t))},h=e=>{var n,t;let s=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{let t=d.indexOf(e.currentTarget)+1;s=null!==(n=d[t])&&void 0!==n?n:d[0];break}case"ArrowLeft":{let n=d.indexOf(e.currentTarget)-1;s=null!==(t=d[n])&&void 0!==t?t:d[d.length-1]}}null==s||s.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:c.map(e=>{let{value:n,label:t,attributes:l}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>d.push(e),onKeyDown:h,onClick:o,...l,className:(0,r.Z)("tabs__item","tabItem_l0OV",null==l?void 0:l.className,{"tabs__item--active":i===n}),children:null!=t?t:n},n)})})}function p(e){let{lazy:n,children:t,selectedValue:l}=e,a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=a.find(e=>e.props.value===l);return e?(0,i.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==l}))})}function m(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:s}=e,r=function(e){let{values:n,children:t}=e;return(0,i.useMemo)(()=>{let e=null!=n?n:h(t).map(e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}});return!function(e){let n=(0,u.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error('Docusaurus error: Duplicate values "'.concat(n.map(e=>e.value).join(", "),'" found in <Tabs>. Every value needs to be unique.'))}(e),e},[n,t])}(e),[l,j]=(0,i.useState)(()=>(function(e){var n;let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:s}))throw Error('Docusaurus error: The <Tabs> has a defaultValue "'.concat(t,'" but none of its children has the corresponding value. Available values are: ').concat(s.map(e=>e.value).join(", "),". If you intend to show no default tab, use defaultValue={null} instead."));return t}let i=null!==(n=s.find(e=>e.default))&&void 0!==n?n:s[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:n,tabValues:r})),[f,p]=function(e){let{queryString:n=!1,groupId:t}=e,s=(0,a.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,d._X)(r),(0,i.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})},[r,s])]}({queryString:t,groupId:s}),[m,y]=function(e){let{groupId:n}=e,t=n?"docusaurus.tab.".concat(n):null,[s,r]=(0,o.Nk)(t);return[s,(0,i.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:s}),g=(()=>{let e=null!=f?f:m;return x({value:e,tabValues:r})?e:null})();return(0,c.Z)(()=>{g&&j(g)},[g]),{selectedValue:l,selectValue:(0,i.useCallback)(e=>{if(!x({value:e,tabValues:r}))throw Error("Can't select invalid tab value=".concat(e));j(e),p(e),y(e)},[p,y,r]),tabValues:r}}(e);return(0,s.jsxs)("div",{className:(0,r.Z)("tabs-container","tabList_J5MA"),children:[(0,s.jsx)(f,{...n,...e}),(0,s.jsx)(p,{...n,...e})]})}function y(e){let n=(0,j.Z)();return(0,s.jsx)(m,{...e,children:h(e.children)},String(n))}},980:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return l}});var s=t(7378);let i={},r=s.createContext(i);function l(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);