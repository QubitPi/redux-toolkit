"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6245],{3411:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(7378),r=a(7140),i="tabItem_wHwb";function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},t)}},2453:function(e,t,a){a.d(t,{Z:function(){return h}});var n=a(2685),r=a(7378),i=a(7140),o=a(362),s=a(56),u=a(5720),l=a(9169),c="tabList_J5MA",p="tabItem_l0OV";function d(e){var t,a,o=e.lazy,d=e.block,h=e.defaultValue,m=e.values,k=e.groupId,f=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=m?m:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,s.l)(y,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===h?h:null!=(t=null!=h?h:null==(a=g.find((function(e){return e.props.default})))?void 0:a.props.value)?t:g[0].props.value;if(null!==v&&!y.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,u.U)(),N=w.tabGroupChoices,q=w.setTabGroupChoices,R=(0,r.useState)(v),C=R[0],T=R[1],x=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var O=N[k];null!=O&&O!==C&&y.some((function(e){return e.value===O}))&&T(O)}var Q=function(e){var t=e.currentTarget,a=x.indexOf(t),n=y[a].value;n!==C&&(E(t),T(n),null!=k&&q(k,String(n)))},S=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,r=x.indexOf(e.currentTarget)+1;a=null!=(n=x[r])?n:x[0];break;case"ArrowLeft":var i,o=x.indexOf(e.currentTarget)-1;a=null!=(i=x[o])?i:x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},f)},y.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return x.push(e)},onKeyDown:S,onFocus:Q,onClick:Q},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===C}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function h(e){var t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},6460:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var n=a(2685),r=a(1244),i=(a(7378),a(5318)),o=(a(3411),a(2453),["components"]),s={id:"usage-without-react-hooks",title:"Usage Without React Hooks",sidebar_label:"Usage Without React Hooks",hide_title:!0,description:"RTK Query > Usage > Usage Without React Hooks: Using RTKQ with other UI frameworks"},u=void 0,l={unversionedId:"rtk-query/usage/usage-without-react-hooks",id:"rtk-query/usage/usage-without-react-hooks",title:"Usage Without React Hooks",description:"RTK Query > Usage > Usage Without React Hooks: Using RTKQ with other UI frameworks",source:"@site/../docs/rtk-query/usage/usage-without-react-hooks.mdx",sourceDirName:"rtk-query/usage",slug:"/rtk-query/usage/usage-without-react-hooks",permalink:"/rtk-query/usage/usage-without-react-hooks",draft:!1,tags:[],version:"current",lastUpdatedAt:1716193556,formattedLastUpdatedAt:"May 20, 2024",frontMatter:{id:"usage-without-react-hooks",title:"Usage Without React Hooks",sidebar_label:"Usage Without React Hooks",hide_title:!0,description:"RTK Query > Usage > Usage Without React Hooks: Using RTKQ with other UI frameworks"},sidebar:"docs",previous:{title:"Customizing Queries",permalink:"/rtk-query/usage/customizing-queries"},next:{title:"Migrating to RTK Query",permalink:"/rtk-query/usage/migrating-to-rtk-query"}},c={},p=[{value:"Adding a subscription",id:"adding-a-subscription",level:2},{value:"Removing a subscription",id:"removing-a-subscription",level:2},{value:"Accessing cached data &amp; request status",id:"accessing-cached-data--request-status",level:2},{value:"Memoization",id:"memoization",level:3},{value:"Performing mutations",id:"performing-mutations",level:2},{value:"Examples",id:"examples",level:2},{value:"Further Information",id:"further-information",level:2}],d={toc:p};function h(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"usage-without-react-hooks"},"Usage Without React Hooks"),(0,i.kt)("p",null,"Like the Redux core and Redux Toolkit, RTK Query's primary functionality is UI-agnostic and can be used with any UI layer. RTK Query also includes a version of ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/createApi"},(0,i.kt)("inlineCode",{parentName:"a"},"createApi"))," designed specifically for use with React, which ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks"},"automatically generates React hooks"),"."),(0,i.kt)("p",null,"While React hooks are the primary way that the majority of users are expected to be using RTK Query, the library itself uses plain JS logic and can be used both with React Class components, and independent of React itself."),(0,i.kt)("p",null,"This page documents how to interact with RTK Query when used without React Hooks, in order to make proper use of RTK Query ",(0,i.kt)("a",{parentName:"p",href:"./cache-behavior"},(0,i.kt)("inlineCode",{parentName:"a"},"cache behavior")),"."),(0,i.kt)("h2",{id:"adding-a-subscription"},"Adding a subscription"),(0,i.kt)("p",null,"Cache subscriptions are used to tell RTK Query that it needs to fetch data for an endpoint. A subscription for an endpoint can be added by dispatching the result of the ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/endpoints#initiate"},(0,i.kt)("inlineCode",{parentName:"a"},"initiate"))," thunk action creator attached to a query endpoint."),(0,i.kt)("p",null,"With React hooks, this behavior is instead handled within ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usequery"},(0,i.kt)("inlineCode",{parentName:"a"},"useQuery")),", ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usequerysubscription"},(0,i.kt)("inlineCode",{parentName:"a"},"useQuerySubscription")),", ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#uselazyquery"},(0,i.kt)("inlineCode",{parentName:"a"},"useLazyQuery")),", and ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#uselazyquerysubscription"},(0,i.kt)("inlineCode",{parentName:"a"},"useLazyQuerySubscription")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Subscribing to cached data" no-transpile',title:'"Subscribing',to:!0,cached:!0,'data"':!0,"no-transpile":!0},"const promise = dispatch(api.endpoints.getPosts.initiate())\nconst { refetch } = promise\n// interact with the cache in the same way as you would with a useFetch...() hook\nconst { data, isLoading, isSuccess /*...*/ } = await promise\n")),(0,i.kt)("h2",{id:"removing-a-subscription"},"Removing a subscription"),(0,i.kt)("p",null,"Removing a cache subscription is necessary for RTK Query to identify that cached data is no longer required. This allows RTK Query to clean up and remove old cache data."),(0,i.kt)("p",null,"The result of dispatching the ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/endpoints#initiate"},(0,i.kt)("inlineCode",{parentName:"a"},"initiate"))," thunk action creator of a query endpoint is a Promise with an ",(0,i.kt)("inlineCode",{parentName:"p"},"unsubscribe")," property. This property is a function that when called, will remove the corresponding cache subscription."),(0,i.kt)("p",null,"With React hooks, this behavior is instead handled within ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usequery"},(0,i.kt)("inlineCode",{parentName:"a"},"useQuery")),", ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usequerysubscription"},(0,i.kt)("inlineCode",{parentName:"a"},"useQuerySubscription")),", ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#uselazyquery"},(0,i.kt)("inlineCode",{parentName:"a"},"useLazyQuery")),", and ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#uselazyquerysubscription"},(0,i.kt)("inlineCode",{parentName:"a"},"useLazyQuerySubscription")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Unsubscribing from cached data" no-transpile',title:'"Unsubscribing',from:!0,cached:!0,'data"':!0,"no-transpile":!0},"// Adding a cache subscription\nconst promise = dispatch(api.endpoints.getPosts.initiate())\n\n// Removing the corresponding cache subscription\npromise.unsubscribe()\n")),(0,i.kt)("h2",{id:"accessing-cached-data--request-status"},"Accessing cached data & request status"),(0,i.kt)("p",null,"Accessing cache data and request status information can be performed using the ",(0,i.kt)("inlineCode",{parentName:"p"},"select")," function property of a query endpoint to create a selector and call that with the Redux state. This provides a snapshot of the cache data and request status information at the time it is called."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"endpoint.select(arg)")," function creates a ",(0,i.kt)("em",{parentName:"p"},"new")," selector instance - it isn't the actual selector function itself!")),(0,i.kt)("p",null,"With React hooks, this behaviour is instead handled within ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usequery"},(0,i.kt)("inlineCode",{parentName:"a"},"useQuery")),", ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usequerystate"},(0,i.kt)("inlineCode",{parentName:"a"},"useQueryState")),", and ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#uselazyquery"},(0,i.kt)("inlineCode",{parentName:"a"},"useLazyQuery")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Accessing cached data & request status" no-transpile',title:'"Accessing',cached:!0,data:!0,"&":!0,request:!0,'status"':!0,"no-transpile":!0},"const result = api.endpoints.getPosts.select()(state)\nconst { data, isSuccess, isError, error } = result\n")),(0,i.kt)("p",null,"Note that unlike with the auto-generated hooks, there is no ",(0,i.kt)("inlineCode",{parentName:"p"},"isFetching")," flag, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"isLoading")," flag will be true if the status is pending, regardless of if there is already data."),(0,i.kt)("h3",{id:"memoization"},"Memoization"),(0,i.kt)("p",null,"Because the ",(0,i.kt)("inlineCode",{parentName:"p"},"endpoint.select(arg)")," function returns a new selector each time it's called, and because this instance itself is memoized, it can be desirable to memoize the creation of a selector (for example, to then use that memoized instance in another selector). This can be done with ",(0,i.kt)("inlineCode",{parentName:"p"},"createSelector"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Creating a memoized selector creator" no-transpile',title:'"Creating',a:!0,memoized:!0,selector:!0,'creator"':!0,"no-transpile":!0},"const createGetPostSelector = createSelector(\n  (id: string) => id,\n  (id) => api.endpoints.getPost.select(id),\n)\n\nconst selectGetPostError = createSelector(\n  (state: RootState) => state,\n  (state: RootState, id: string) => createGetPostSelector(id),\n  (state, selectGetPost) => selectGetPost(state).error,\n)\n")),(0,i.kt)("h2",{id:"performing-mutations"},"Performing mutations"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/rtk-query/usage/mutations"},"Mutations")," are used in order to update data on the server. Mutations can be performed by dispatching the result of the ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/endpoints#initiate"},(0,i.kt)("inlineCode",{parentName:"a"},"initiate"))," thunk action creator attached to a mutation endpoint."),(0,i.kt)("p",null,"With React hooks, this behavior is instead handled within ",(0,i.kt)("a",{parentName:"p",href:"/rtk-query/api/created-api/hooks#usemutation"},(0,i.kt)("inlineCode",{parentName:"a"},"useMutation")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Triggering a mutation endpoint" no-transpile',title:'"Triggering',a:!0,mutation:!0,'endpoint"':!0,"no-transpile":!0},"dispatch(api.endpoints.addPost.initiate({ name: 'foo' }))\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Examples of usage without React hooks can be found under the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"PostDetail")," component in the ",(0,i.kt)("a",{parentName:"li",href:"/rtk-query/usage/examples#react-class-components"},(0,i.kt)("inlineCode",{parentName:"a"},"React Class Components")," example")),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"/rtk-query/usage/examples#svelte"},(0,i.kt)("inlineCode",{parentName:"a"},"Svelte")," example")),(0,i.kt)("li",{parentName:"ul"},"The below ",(0,i.kt)("inlineCode",{parentName:"li"},"Cache Lifetime Subscription Class Component")," example:")),(0,i.kt)("iframe",{src:"https://codesandbox.io/embed/rtk-query-cache-lifetime-subscription-class-component-example-38mgd?fontsize=12&runonclick=1&hidenavigation=1&module=%2Fsrc%2Fcomponents%2FUsersList.tsx&theme=dark&runonclick=1",style:{width:"100%",height:"800px",border:0,borderRadius:"4px",overflow:"hidden"},title:"RTK Query Cache Lietime Subscription Class Component Example",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),(0,i.kt)("h2",{id:"further-information"},"Further Information"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"NgRx maintainer Brandon Roberts has written a post called ",(0,i.kt)("a",{parentName:"li",href:"https://dev.to/brandontroberts/cousins-playing-nicely-experimenting-with-ngrx-store-and-rtk-query-25f4"},"Cousins playing nicely: Experimenting with NgRx Store and RTK Query"),", which demonstrates some approaches for integrating RTK Query into NgRx"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SaulMoro/ngrx-rtk-query"},(0,i.kt)("inlineCode",{parentName:"a"},"saulmoro/ngrx-rtk-query"))," implements an NgRx equivalent of the subscription lifecycle managed in RTKQ's own React hooks")))}h.isMDXComponent=!0},5318:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return h}});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),l=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(a),h=r,m=d["".concat(u,".").concat(h)]||d[h]||p[h]||i;return a?n.createElement(m,o(o({ref:t},c),{},{components:a})):n.createElement(m,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);